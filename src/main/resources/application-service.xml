<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

<!--    <context:component-scan base-package="com.bw.config" />-->

    <!--注册例如AutowiredAnnotationBeanPostProcessor注解，这样我们就能够使用@Autowired注解，
    通过在bean创建时执行AutowiredAnnotationBeanPostProcessor扫描当前的bean那些属性被@Autowired注解了，然后注入bean
    有了component-scan这个注解也就可以移除了
    -->
    <context:annotation-config />
    <!--扫描注解的位置-->
    <context:component-scan base-package="com.bw.service,com.bw.spring"/>

    <context:property-placeholder location="classpath:ldap.properties, classpath:jdbc.properties" />

    <!--配置事务管理-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!--第一种方式的事务管理-->
<!--    <bean id="transactionManagerForRead" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
<!--        <property name="dataSource" ref="dataSourceForRead" />-->
<!--    </bean>-->
<!--    <bean id="transactionManagerForWrite" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
<!--        <property name="dataSource" ref="dataSourceForWrite" />-->
<!--    </bean>-->

    <!--开启注解式的事务声明 默认使用的事务管理器：transactionManager，
    可以通过使用@Transaction(value="transactionManagerForRead")，事务管理器bean名选择-->
<!--    <tx:annotation-driven transaction-manager="transactionManager" />-->
    <tx:annotation-driven />
    <!--开启注解式aop-->
    <aop:aspectj-autoproxy proxy-target-class="true" />

</beans>